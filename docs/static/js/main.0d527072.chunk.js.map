{"version":3,"sources":["reportWebVitals.js","history.js","features/ingredients/ingredientsSlice.js","features/liquors/liquorsSlice.js","features/saved-cocktails/savedCocktailsSlice.js","axiosApi.js","components/heart-checkbox/index.js","components/cocktail-display/index.js","components/list-dropdown/index.js","components/cocktail-detail/index.js","components/right-cocktail-sidenav/index.js","components/homepage/index.js","features/users/usersSlice.js","components/login/index.js","components/signup/index.js","components/primary-navigation-bar/index.js","components/help-icon/index.js","components/amounts-input/index.js","components/create-cocktail-form/index.js","components/cocktails-list/index.js","components/saved-cocktails-display/index.js","components/created-cocktails-display/index.js","components/dynamic-cocktail-display-container/index.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ingredientsSlice","createSlice","name","initialState","reducers","didGetIngredients","state","action","push","payload","didCreateIngredient","actions","liquorsSlice","didGetLiquors","didCreateLiquor","savedCocktailsSlice","didGetCocktails","didSaveCocktail","didUnsaveCocktail","filter","cocktail","publicId","apiLocation","process","API_LOCATION","axiosInstance","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","status","url","removeItem","window","location","href","Promise","reject","statusText","refresh_token","post","refresh","setItem","data","access","defaults","catch","err","console","log","HeartCheckbox","props","onClick","handleClick","isChecked","Provider","value","color","size","CocktailDisplay","showCocktailDetails","cocktailDetails","listIngredients","ingredients","liquors","className","map","ingredient","amount","unit","public_id","createdBy","username","getImage","image","src","isSaved","toggleSaveCocktail","tabIndex","timesSaved","complexity","description","instructions","this","React","PureComponent","buildOptions","options","length","option","label","_","startCase","ListDropdown","canCreateNewOptions","styles","control","provided","borderWidth","borderColor","isMulti","onChange","handleSelect","optionName","dropdown","memo","allIngredientsToString","ingredientNames","join","CocktailDetail","to","target","RightCocktailSidenav","list","cocktails","additionalCocktails","get","params","liquors_filter","JSON","stringify","liquor","ingredients_filter","setState","Drawer","anchor","open","onClose","toggleShowMoreCocktails","Component","Homepage","getCocktail","a","selectedLiquors","selectedIngredients","find_exact_match","shouldBeExact","hide_user_cocktails","hideUserCocktails","res","NotificationManager","warning","canShowMoreCocktails","cocktailId","isSignedIn","dispatch","amtSaved","showMoreCocktailsOption","moreCocktailsSidenav","showMoreCocktails","selectedOptions","values","toggleExactMatch","toggleShowUserCocktails","ingredientOptions","liquorOptions","all","Button","variant","Tooltip","placement","title","Checkbox","checked","showUserCocktails","connect","user","parse","usersSlice","loginUser","logoutUser","Login","handleChange","event","handleSubmit","preventDefault","password","id","email","onSubmit","type","Signup","validateInput","hasAttemptedSubmit","passwordsMatch","confirmPassword","passwordLengthValid","trim","bind","TextField","required","passwordError","helperText","confirmPasswordError","PrimaryNavigationBar","logout","leftNavContent","content","rightNavContent","DropdownButton","Dropdown","Item","as","Link","Divider","HelpIcon","unitDropdown","item","select","updateProperty","SelectProps","native","AmountsInput","items","InputLabelProps","shrink","InputProps","inputProps","min","max","step","CreateCocktailForm","isEmpty","key","selectType","optionToCreate","find","__isNew__","createNewOption","newOption","index","findIndex","existingValue","selectClassName","isValid","optionType","endpoint","createdOption","success","handleSelectComplexity","selectedComplexity","isValidStyles","complexityClass","itemId","property","updatedIngredient","updatedLiquor","itemToUpdate","prevState","toggleIsPrivate","isPrivate","cocktailName","uploadCocktailImage","setTimeout","submittedForm","errorMessageActive","complexityOptions","Array","keys","val","validateForm","cocktailNameValid","selectedIngredientsValid","selectedLiquorsValid","instructionsValid","complexityIsValid","formIsValid","complexityStyles","selectedIngredientsAreValid","selectedLiquorsAreValid","shouldRedirect","pathname","onUploadImage","img","cocktailImg","imageData","FormData","append","buttonText","imgExtension","maxFileSize","singleImage","withIcon","withPreview","sortBy","uniqBy","CocktailsList","SavedCocktailsDisplay","savedCocktails","CreatedCocktailsDisplay","createdCocktails","DynamicCocktailDisplayContainer","match","displayCocktail","App","history","exact","path","component","users","combineReducers","usersReducer","liquorsReducer","ingredientsReducer","savedCocktailsReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d527072.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst ingredientsSlice = createSlice({\n  name: \"ingredients\",\n  initialState: [],\n  reducers: {\n    didGetIngredients(state, action) {\n      state.push(...action.payload);\n    },\n    // can \"mutate\" state here bc using the redux toolkit\n    // which users Immer library under the hood\n    didCreateIngredient(state, action) {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const {\n  didGetIngredients,\n  didCreateIngredient,\n} = ingredientsSlice.actions;\n\nexport default ingredientsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst liquorsSlice = createSlice({\n  name: \"liquors\",\n  initialState: [],\n  reducers: {\n    didGetLiquors(state, action) {\n      state.push(...action.payload);\n    },\n    // can \"mutate\" state here bc using the redux toolkit\n    // which users Immer library under the hood\n    didCreateLiquor(state, action) {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const { didGetLiquors, didCreateLiquor } = liquorsSlice.actions;\n\nexport default liquorsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst savedCocktailsSlice = createSlice({\n  name: \"savedCocktails\",\n  initialState: [],\n  reducers: {\n    didGetCocktails(state, action) {\n      return [...action.payload];\n    },\n    didSaveCocktail(state, action) {\n      return [...state, action.payload];\n    },\n    didUnsaveCocktail(state, action) {\n      return state.filter((cocktail) => cocktail.publicId !== action.payload);\n    },\n  },\n});\n\nexport const {\n  didGetCocktails,\n  didSaveCocktail,\n  didUnsaveCocktail,\n} = savedCocktailsSlice.actions;\n\nexport default savedCocktailsSlice.reducer;\n","import axios from \"axios\";\n\nconst apiLocation =\n  process.env.API_LOCATION || \"https://cocktail-app-test.herokuapp.com\";\n\nconst axiosInstance = axios.create({\n  baseURL: `${apiLocation}/api/`,\n  timeout: 5000,\n  headers: {\n    Authorization: \"JWT \" + localStorage.getItem(\"access_token\"),\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const originalRequest = error.config;\n\n    // Prevent infinite loops\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === \"/token/refresh/\"\n    ) {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refesh_token\");\n      localStorage.removeItem(\"user\");\n      window.location.href = \"/login/\";\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.status === 401 &&\n      error.response.statusText === \"Unauthorized\"\n    ) {\n      const refresh_token = localStorage.getItem(\"refresh_token\");\n\n      return axiosInstance\n        .post(\"/token/refresh/\", { refresh: refresh_token })\n        .then((response) => {\n          localStorage.setItem(\"access_token\", response.data.access);\n          localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n          axiosInstance.defaults.headers[\"Authorization\"] =\n            \"JWT \" + response.data.access;\n          originalRequest.headers[\"Authorization\"] =\n            \"JWT \" + response.data.access;\n\n          return axiosInstance(originalRequest);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import React from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { IoMdHeartEmpty, IoMdHeart } from \"react-icons/io\";\n\nconst heart = (isChecked) => {\n  return (\n    <IconContext.Provider value={{ color: \"red\" }}>\n      <div>\n        {isChecked ? <IoMdHeart size={20} /> : <IoMdHeartEmpty size={20} />}\n      </div>\n    </IconContext.Provider>\n  );\n};\n\nconst HeartCheckbox = (props) => {\n  return <div onClick={props.handleClick}>{heart(props.isChecked)}</div>;\n};\n\nexport default HeartCheckbox;\n","import React from \"react\";\n\nimport \"./styles.scss\";\nimport HeartCheckbox from \"../heart-checkbox\";\n\nclass CocktailDisplay extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: \"\",\n    };\n  }\n\n  showCocktailDetails = () => {\n    if (this.props.name) {\n      return this.cocktailDetails(this.props.cocktail);\n    }\n  };\n\n  listIngredients = () => {\n    if (this.props.ingredients && this.props.liquors) {\n      const ingredients = [...this.props.liquors, ...this.props.ingredients];\n      return (\n        <ul className=\"ingredients-list\">\n          {ingredients.map((ingredient) => (\n            <li key={`${ingredient.public_id}-${ingredient.name}`}>\n              <span>\n                {ingredient.name} - {ingredient.amount} {ingredient.unit}\n              </span>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  };\n\n  createdBy = () => {\n    if (this.props.createdBy) {\n      return (\n        <span className=\"complexity stat\">\n          Created By: {this.props.createdBy.username}\n        </span>\n      );\n    }\n  };\n\n  getImage = () => {\n    if (this.props.image) {\n      return this.props.image.image;\n    }\n\n    return \"http://localhost:8000/static/defaultimg.png\";\n  };\n\n  cocktailDetails = () => {\n    return (\n      <div className=\"cocktail-details\">\n        <div className=\"img-and-stats\">\n          <img src={this.getImage()} />\n          <h2>{this.props.name}</h2>\n          <span className=\"heart-checkbox\">\n            <HeartCheckbox\n              isChecked={this.props.isSaved}\n              handleClick={this.props.toggleSaveCocktail}\n              tabIndex=\"0\"\n            />\n          </span>\n          <span className=\"saved stat\">\n            Times Saved: {this.props.timesSaved}\n          </span>\n          <span className=\"complexity stat\">\n            Complexity: {this.props.complexity}/10\n          </span>\n          {this.createdBy()}\n        </div>\n        <div>\n          <h3 className=\"header\">Description</h3>\n          <p className=\"content\">{this.props.description}</p>\n        </div>\n        <div className=\"ingredients-container\">\n          <h3 className=\"ingredients header\">Ingredients</h3>\n          {this.listIngredients()}\n        </div>\n        <div>\n          <h3 className=\"header\">Instructions</h3>\n          <p className=\"content\">{this.props.instructions}</p>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return <div>{this.showCocktailDetails()}</div>;\n  }\n}\n\nexport default CocktailDisplay;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport _ from \"lodash\";\n\nconst buildOptions = (options) => {\n  if (options.length > 0) {\n    return options.map((option) => {\n      return {\n        value: option,\n        label: _.startCase(option.name),\n      };\n    });\n  }\n};\n\nconst dropdown = (props) => {\n  if (props.canCreateNewOptions) {\n    return (\n      <CreatableSelect\n        styles={{\n          control: (provided) => ({\n            ...provided,\n            color: \"black\",\n            borderWidth: \"1px\",\n            borderColor: !props.error ? \"hsl(0, 0%, 80%)\" : \"red\",\n          }),\n          option: (provided) => ({\n            ...provided,\n            color: \"black\",\n          }),\n        }}\n        name={props.name}\n        options={buildOptions(props.options)}\n        isMulti\n        onChange={props.handleSelect(props.optionName)}\n      />\n    );\n  } else {\n    return (\n      <Select\n        styles={{\n          control: (provided) => ({\n            ...provided,\n            color: \"black\",\n            borderWidth: \"1px\",\n            borderColor: !props.error ? \"hsl(0, 0%, 80%)\" : \"red\",\n          }),\n          option: (provided) => ({\n            ...provided,\n            color: \"black\",\n          }),\n        }}\n        name={props.name}\n        options={buildOptions(props.options)}\n        isMulti\n        onChange={props.handleSelect(props.optionName)}\n      />\n    );\n  }\n};\n\nconst ListDropdown = (props) => {\n  return dropdown(props);\n};\n\nexport default React.memo(ListDropdown);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles.scss\";\n\n/**\n *\n * @param {*} props\n * * @property {Object} cocktail\n * @returns a small <div> containing the essential elements of a cocktail in a small, reusable format\n */\n\nconst allIngredientsToString = (ingredients) => {\n  const ingredientNames = ingredients.map((ingredient) => ingredient.name);\n  return <p className=\"ingredients\">{ingredientNames.join(\", \")}</p>;\n};\n\nconst CocktailDetail = (props) => {\n  return (\n    <Link\n      className=\"cocktail-detail\"\n      to={`/cocktail/${props.cocktail.publicId}/`}\n      target=\"_blank\"\n    >\n      <img src=\"http://localhost:8000/static/defaultimg.png\" />\n      <div className=\"name\">{props.cocktail.name}</div>\n      <div className=\"ingredients-list\">\n        {allIngredientsToString([\n          ...props.cocktail.liquors,\n          ...props.cocktail.ingredients,\n        ])}\n      </div>\n    </Link>\n  );\n};\n\nexport default React.memo(CocktailDetail);\n","import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport \"./styles.scss\";\nimport CocktailDetail from \"../cocktail-detail\";\nimport axiosInstance from \"../../axiosApi\";\n\nclass RightCocktailSidenav extends React.Component {\n  /**\n   *\n   * @param {*} props\n   * * expects either a list of ingredients or cocktails (or both)\n   * * to use to query for a larger list of cocktails containing those ingredients\n   * * @property {Array.<Object>} ingredients\n   * * @property {Array.<Object>} liquors\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = { additionalCocktails: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const additionalCocktails = await axiosInstance.get(\n        \"cocktails/filtered_cocktails/\",\n        {\n          params: {\n            liquors_filter: JSON.stringify(\n              this.props.liquors.map((liquor) => liquor.publicId)\n            ),\n            ingredients_filter: JSON.stringify(\n              this.props.ingredients.map((ingredient) => ingredient.publicId)\n            ),\n          },\n        }\n      );\n\n      this.setState({ additionalCocktails: additionalCocktails.data });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  list = (cocktails) => {\n    return (\n      <div className=\"cocktails-list\">\n        {cocktails.map((cocktail) => {\n          return <CocktailDetail cocktail={cocktail} key={cocktail.publicId} />;\n        })}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Drawer\n        anchor=\"right\"\n        open={true}\n        onClose={this.props.toggleShowMoreCocktails}\n      >\n        {this.list(this.state.additionalCocktails)}\n      </Drawer>\n    );\n  }\n}\n\nexport default RightCocktailSidenav;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { NotificationManager } from \"react-notifications\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n// redux actions\nimport { didGetIngredients } from \"../../features/ingredients/ingredientsSlice\";\nimport { didGetLiquors } from \"../../features/liquors/liquorsSlice\";\nimport { didSaveCocktail } from \"../../features/saved-cocktails/savedCocktailsSlice\";\nimport { didUnsaveCocktail } from \"../../features/saved-cocktails/savedCocktailsSlice\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport CocktailDisplay from \"../cocktail-display\";\nimport ListDropdown from \"../list-dropdown\";\nimport RightCocktailSidenav from \"../right-cocktail-sidenav\";\n\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      complexity: 0,\n      image: \"\",\n      error: \"\",\n      selectedIngredients: [],\n      selectedLiquors: [],\n      shouldBeExact: false,\n      hideUserCocktails: false,\n      createdBy: null,\n      isSaved: false,\n      timesSaved: 0,\n      canShowMoreCocktails: false,\n      showMoreCocktails: false,\n    };\n  }\n\n  async componentDidMount() {\n    // only make network request to get liquors and ingredients if the store is not already filled\n    try {\n      if (\n        this.props.ingredientOptions.length === 0 &&\n        this.props.liquorOptions.length === 0\n      ) {\n        const [ingredients, liquors] = await Promise.all([\n          axiosInstance.get(\"/ingredients/\"),\n          axiosInstance.get(\"/liquors/\"),\n        ]);\n\n        this.props.dispatch(didGetIngredients(ingredients.data));\n        this.props.dispatch(didGetLiquors(liquors.data));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  getCocktail = async () => {\n    try {\n      const res = await axiosInstance.get(\"/cocktails/random_cocktail\", {\n        params: {\n          liquors_filter: JSON.stringify(\n            this.state.selectedLiquors.map((liquor) => liquor.publicId)\n          ),\n          ingredients_filter: JSON.stringify(\n            this.state.selectedIngredients.map(\n              (ingredient) => ingredient.publicId\n            )\n          ),\n          find_exact_match: this.state.shouldBeExact,\n          hide_user_cocktails: this.state.hideUserCocktails,\n        },\n      });\n\n      if (res.status === 204) {\n        NotificationManager.warning(\n          \"Unfortunately, we were unable to find an exact match for you based on your filters. Try adjusting your filters or checking off the exact match button.\",\n          \"No Cocktail Found\",\n          5000\n        );\n      } else {\n        const cocktail = res.data;\n\n        const canShowMoreCocktails =\n          this.state.selectedIngredients.length > 0 ||\n          this.state.selectedLiquors.length > 0;\n\n        this.setState({\n          cocktail: cocktail,\n          cocktailId: cocktail.publicId,\n          name: cocktail.name,\n          description: cocktail.description,\n          complexity: cocktail.complexity,\n          image: cocktail.image,\n          ingredients: cocktail.ingredients,\n          liquors: cocktail.liquors,\n          instructions: cocktail.instructions,\n          createdBy: cocktail.createdBy,\n          isSaved: cocktail.isSaved,\n          timesSaved: cocktail.timesSaved,\n          canShowMoreCocktails: canShowMoreCocktails,\n          error: \"\",\n        });\n\n        axiosInstance.post(\"cocktails/viewed_cocktail/\", {\n          public_id: cocktail.publicId,\n        });\n      }\n    } catch (e) {\n      this.setState({\n        error: \"Error retrieving cocktails\",\n      });\n    }\n  };\n\n  toggleSaveCocktail = async () => {\n    if (!this.props.isSignedIn) {\n      NotificationManager.warning(\n        \"Please login or create an account in order to save cocktails!\",\n        \"Cannot Save\",\n        3000\n      );\n\n      return;\n    }\n\n    try {\n      if (!this.state.isSaved) {\n        await axiosInstance.post(\"/cocktails/save_cocktail/\", {\n          public_id: this.state.cocktailId,\n        });\n\n        this.setState({ isSaved: true, timesSaved: this.state.timesSaved + 1 });\n\n        this.props.dispatch(didSaveCocktail(this.state.cocktail));\n      } else {\n        await axiosInstance.post(\"/cocktails/unsave_cocktail/\", {\n          public_id: this.state.cocktailId,\n        });\n\n        this.setState({\n          isSaved: false,\n          timesSaved: this.state.timesSaved - 1,\n        });\n\n        this.props.dispatch(didUnsaveCocktail(this.state.cocktailId));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  showCocktailDetails = () => {\n    let content;\n    if (!this.state.error) {\n      content = (\n        <CocktailDisplay\n          name={this.state.name}\n          description={this.state.description}\n          amtSaved={this.state.amtSaved}\n          complexity={this.state.complexity}\n          image={this.state.image}\n          ingredients={this.state.ingredients}\n          liquors={this.state.liquors}\n          instructions={this.state.instructions}\n          createdBy={this.state.createdBy}\n          isSaved={this.state.isSaved}\n          timesSaved={this.state.timesSaved}\n          toggleSaveCocktail={this.toggleSaveCocktail}\n        />\n      );\n    } else {\n      content = <div>{this.state.error}</div>;\n    }\n    return content;\n  };\n\n  showMoreCocktailsOption = () => {\n    if (this.state.canShowMoreCocktails) {\n      return (\n        <div\n          className=\"show-more-cocktails-text\"\n          onClick={this.toggleShowMoreCocktails}\n        >\n          Show more cocktails with these ingredients\n        </div>\n      );\n    }\n  };\n\n  moreCocktailsSidenav = () => {\n    if (this.state.showMoreCocktails) {\n      return (\n        <RightCocktailSidenav\n          ingredients={this.state.selectedIngredients}\n          liquors={this.state.selectedLiquors}\n          toggleShowMoreCocktails={this.toggleShowMoreCocktails}\n        />\n      );\n    }\n  };\n\n  handleSelect = (optionName) => (selectedOptions) => {\n    const values = selectedOptions.map((option) => option.value);\n\n    this.setState({ [optionName]: values });\n  };\n\n  toggleExactMatch = () => {\n    this.setState({ shouldBeExact: !this.state.shouldBeExact });\n  };\n\n  toggleShowUserCocktails = () => {\n    this.setState({ hideUserCocktails: !this.state.hideUserCocktails });\n  };\n\n  toggleShowMoreCocktails = () => {\n    this.setState({ showMoreCocktails: !this.state.showMoreCocktails });\n  };\n\n  render() {\n    return (\n      <div className=\"homepage-container\">\n        <div className=\"cocktail-display\">\n          {this.showCocktailDetails()}\n          <div\n            className={\n              this.state.name.length > 0\n                ? \"cocktail-options active\"\n                : \"cocktail-options inactive\"\n            }\n          >\n            {this.showMoreCocktailsOption()}\n            <Button\n              variant=\"contained\"\n              className=\"cocktail-button\"\n              onClick={this.getCocktail}\n            >\n              Find a random cocktail\n            </Button>\n            <div className=\"filters\">\n              <div className=\"filter-dropdown liquors-filter\">\n                <div className=\"input-name\">Filter By Liquor:</div>\n                <ListDropdown\n                  canCreateNewOptions={false}\n                  name=\"Liquors\"\n                  options={this.props.liquorOptions}\n                  optionName=\"selectedLiquors\"\n                  handleSelect={this.handleSelect}\n                />\n              </div>\n              <div className=\"filter-dropdown ingredients-filter\">\n                <div className=\"input-name\">Filter By Ingredient:</div>\n                <ListDropdown\n                  canCreateNewOptions={false}\n                  name=\"Ingredients\"\n                  options={this.props.ingredientOptions}\n                  optionName=\"selectedIngredients\"\n                  handleSelect={this.handleSelect}\n                />\n              </div>\n              <div className=\"exact-match checkbox\">\n                <Tooltip\n                  placement=\"top\"\n                  title=\"Check this box if you want to find a cocktail with exactly your selected ingredients, no more, no less!\"\n                >\n                  <div>\n                    <Checkbox\n                      checked={this.state.shouldBeExact}\n                      onChange={this.toggleExactMatch}\n                    />\n                    <span className=\"checkbox-text\">Find Exact Match</span>\n                  </div>\n                </Tooltip>\n              </div>\n              <div className=\"user-created checkbox\">\n                <Checkbox\n                  checked={this.state.showUserCocktails}\n                  onChange={this.toggleShowUserCocktails}\n                />\n                <span className=\"checkbox-text\">\n                  Hide User Created Cocktails\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {this.moreCocktailsSidenav()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { liquors, ingredients } = state;\n  return { liquorOptions: liquors, ingredientOptions: ingredients };\n};\n\nexport default connect(mapStateToProps)(Homepage);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : null,\n};\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    loginUser(state, action) {\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    logoutUser(state, action) {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    },\n  },\n});\n\nexport const { loginUser, logoutUser } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\n\n// redux actions\nimport { loginUser } from \"../../features/users/usersSlice\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    let response;\n    try {\n      response = await axiosInstance.post(\"/token/obtain/\", {\n        username: this.state.username,\n        password: this.state.password,\n      });\n\n      if (!response) {\n        NotificationManager.error(\n          \"There was an error logging you in. Please make sure your username and password are correct.\",\n          \"Login Error\",\n          3000\n        );\n        return;\n      }\n\n      axiosInstance.defaults.headers[\"Authorization\"] =\n        \"JWT \" + response.data.access;\n      localStorage.setItem(\"access_token\", response.data.access);\n      localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n      // update store with user here\n      const payload = {\n        id: response.data.id,\n        username: response.data.user,\n        email: response.data.email,\n      };\n      this.props.dispatch(loginUser(payload));\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <h1>Login</h1>\n        <form className=\"login-form\" onSubmit={this.handleSubmit}>\n          <label>\n            <div>Username:</div>\n            <input\n              name=\"username\"\n              type=\"text\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <div>Password:</div>\n            <input\n              name=\"password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input\n            className=\"signup-submit-button\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default connect()(Login);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport axiosInstance from \"../../axiosApi\";\nimport \"./styles.scss\";\n\n// redux actions\nimport { loginUser } from \"../../features/users/usersSlice\";\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      email: \"\",\n      hasAttemptedSubmit: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    this.setState({ hasAttemptedSubmit: true });\n\n    try {\n      const response = await axiosInstance.post(\"/user/create/\", {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n      });\n\n      if (response.status === 207) {\n        NotificationManager.error(response.data, \"Signup Error\", 3000);\n        return;\n      }\n\n      this.props.dispatch(loginUser(response.data));\n      return response;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  validateInput = () => {\n    if (!this.state.hasAttemptedSubmit) {\n      return true;\n    }\n\n    const passwordsMatch = this.state.confirmPassword === this.state.password;\n    const passwordLengthValid = this.state.password.trim().length > 7;\n    const isValid = passwordsMatch && passwordLengthValid;\n\n    return isValid;\n  };\n\n  render() {\n    return (\n      <div className=\"signup-form-container\">\n        <h1>Signup</h1>\n        <form className=\"signup-form\" onSubmit={this.handleSubmit}>\n          <label>\n            <TextField\n              required\n              className={this.state.passwordError ? \"invalid\" : \"\"}\n              label=\"Username\"\n              name=\"username\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <TextField\n              required\n              className={this.state.passwordError ? \"invalid\" : \"\"}\n              label=\"Email\"\n              name=\"email\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <TextField\n              required\n              className={this.state.passwordError ? \"invalid\" : \"\"}\n              error={!this.validateInput()}\n              helperText=\"Please make sure your password is at least 8 characters long.\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <TextField\n              required\n              className={this.state.confirmPasswordError ? \"invalid\" : \"\"}\n              error={!this.validateInput()}\n              label=\"Confirm Password\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              variant=\"outlined\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <input\n            className=\"signup-submit-button\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Signup);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\n\n// redux actions\nimport { logoutUser } from \"../../features/users/usersSlice\";\n\nclass PrimaryNavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logout = async () => {\n    let response;\n    try {\n      response = await axiosInstance.post(\"/blacklist/\", {\n        refresh_token: localStorage.getItem(\"refresh_token\"),\n      });\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      axiosInstance.defaults.headers[\"Authorization\"] = null;\n\n      this.props.dispatch(logoutUser());\n    } catch (e) {\n      console.log(e);\n    } finally {\n      return response;\n    }\n  };\n\n  leftNavContent = () => {\n    let content;\n\n    if (this.props.user) {\n      content = (\n        <span className=\"cocktail-options-buttons\">\n          <Link className=\"nav-link\" to=\"/create-cocktail/\">\n            Create a Cocktail\n          </Link>\n        </span>\n      );\n    }\n\n    return content;\n  };\n\n  rightNavContent = () => {\n    let content;\n\n    if (this.props.user) {\n      content = (\n        <DropdownButton\n          className=\"user-options-dropdown\"\n          variant=\"Secondary\"\n          title={this.props.user.username}\n        >\n          <Dropdown.Item>Profile</Dropdown.Item>\n          <Dropdown.Item as={Link} to={\"/saved-cocktails/\"}>\n            Saved Cocktails\n          </Dropdown.Item>\n          <Dropdown.Item as={Link} to={\"/created-cocktails/\"}>\n            Created Cocktails\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item onClick={this.logout}>Logout</Dropdown.Item>\n        </DropdownButton>\n      );\n    } else {\n      content = (\n        <span className=\"login-signup-buttons\">\n          <Link className=\"nav-link\" to=\"/login/\">\n            Login\n          </Link>\n          <Link className=\"nav-link\" to=\"/signup/\">\n            Sign Up\n          </Link>\n        </span>\n      );\n    }\n\n    return content;\n  };\n\n  render() {\n    return (\n      <div className=\"primary-navigation-bar\">\n        <nav>\n          <Link className=\"nav-link homepage\" to=\"/\">\n            <img className=\"site-logo-nav\" src=\"/defaultimg.png\" />\n            <span>Mixed In</span>\n          </Link>\n          {this.leftNavContent()}\n          {this.rightNavContent()}\n        </nav>\n      </div>\n    );\n  }\n}\nexport default connect()(PrimaryNavigationBar);\n","import { FiHelpCircle } from \"react-icons/fi\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst HelpIcon = (props) => {\n  return (\n    <Tooltip title={props.title} placement={props.placement}>\n      <span className=\"help-icon\">\n        <FiHelpCircle />\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default HelpIcon;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./styles.scss\";\n\nconst unitDropdown = (item, props) => {\n  const options = [\n    {\n      value: \"oz\",\n      label: \"oz\",\n    },\n    {\n      value: \"dash(es)\",\n      label: \"dash(es)\",\n    },\n    {\n      value: \"cup(s)\",\n      label: \"cup(s)\",\n    },\n  ];\n\n  return (\n    <TextField\n      className=\"outlined-select-currency-native\"\n      select\n      label=\"Unit\"\n      value={item.unit}\n      onChange={props.updateProperty(item.publicId, \"unit\")}\n      SelectProps={{\n        native: true,\n      }}\n      variant=\"outlined\"\n    >\n      {options.map((option) => (\n        <option key={option.label} value={option.value}>\n          {option.value}\n        </option>\n      ))}\n    </TextField>\n  );\n};\n\nconst AmountsInput = (props) => {\n  return (\n    <div className=\"amounts-input-list\">\n      {props.items.map((item) => {\n        return (\n          <div key={item.publicId} className=\"amount-input-item\">\n            <span className=\"item-name\">{item.name}: </span>\n            <TextField\n              className=\"item-input\"\n              label=\"Amount\"\n              type=\"number\"\n              value={item.amount}\n              onChange={props.updateProperty(item.publicId, \"amount\")}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                inputProps: {\n                  min: props.min,\n                  max: props.max,\n                  step: \"any\",\n                },\n              }}\n              variant=\"outlined\"\n            />\n            {unitDropdown(item, props)}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AmountsInput;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { NotificationManager } from \"react-notifications\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ImageUploader from \"react-images-upload\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\n// redux actions\nimport {\n  didGetIngredients,\n  didCreateIngredient,\n} from \"../../features/ingredients/ingredientsSlice\";\nimport {\n  didGetLiquors,\n  didCreateLiquor,\n} from \"../../features/liquors/liquorsSlice\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport HelpIcon from \"../help-icon\";\nimport ListDropdown from \"../list-dropdown\";\nimport AmountsInput from \"../amounts-input\";\n\nclass CreateCocktailForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cocktailName: \"\",\n      cocktailImg: null,\n      description: \"\",\n      complexity: 0,\n      instructions: \"\",\n      selectedIngredients: [],\n      selectedLiquors: [],\n      isPrivate: false,\n      cocktailNameValid: true,\n      selectedLiquorsAreValid: true,\n      selectedIngredientsAreValid: true,\n      complexityClass: {},\n      instructionsValid: true,\n      submittedForm: false,\n      errorMessageActive: false,\n    };\n  }\n\n  async componentDidMount() {\n    // only make network request to get liquors and ingredients if the store is not already filled\n    try {\n      if (\n        this.props.ingredientOptions.length === 0 &&\n        this.props.liquorOptions.length === 0\n      ) {\n        const [ingredients, liquors] = await Promise.all([\n          axiosInstance.get(\"/ingredients/\"),\n          axiosInstance.get(\"/liquors/\"),\n        ]);\n\n        this.props.dispatch(didGetIngredients(ingredients.data));\n        this.props.dispatch(didGetLiquors(liquors.data));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  handleChange = (event) => {\n    const isEmpty = event.target.value.trim().length === 0;\n    const key = event.target.name + \"Valid\";\n    this.setState({ [event.target.name]: event.target.value, [key]: !isEmpty });\n  };\n\n  handleSelect = (name) => async (selectedOptions, selectType) => {\n    if (selectType.action === \"create-option\") {\n      const optionToCreate = _.find(selectedOptions, { __isNew__: true });\n\n      const newOption = await this.createNewOption(name, optionToCreate.label);\n      const index = selectedOptions.findIndex(\n        (option) => option.__isNew__ == true\n      );\n      selectedOptions[index].value = newOption;\n      selectedOptions[index].__isNew__ = false;\n    }\n\n    const values = selectedOptions.map((option) => {\n      let value = option.value;\n\n      const existingValue = _.find(this.state[name], (item) => {\n        return item.publicId === value.publicId;\n      });\n\n      if (existingValue) {\n        value = { ...existingValue };\n      } else {\n        value = { ...value, amount: 0, unit: \"oz\" };\n      }\n\n      return value;\n    });\n    const selectClassName = name + \"AreValid\";\n    const isValid = values.length > 0;\n\n    this.setState({ [name]: values, [selectClassName]: isValid });\n  };\n\n  /**\n   *\n   * @param {String} optionType\n   * @param {Object} newOption\n   *\n   * takes in an optionType (selectedIngredient or selectedLiquor) and handles creating a previously\n   * non-existent liquor or ingredient\n   *\n   * this will persist this record and associate it with the currently logged in user.\n   *\n   * only the creator of the custom liquor or ingredient will be able to see or use it while\n   * creating new cocktails.\n   *\n   * @returns undefined\n   */\n  createNewOption = async (optionType, newOption) => {\n    const endpoint =\n      optionType === \"selectedLiquors\" ? \"liquors\" : \"ingredients\";\n\n    try {\n      const res = await axiosInstance.post(`/${endpoint}/`, {\n        name: newOption,\n      });\n\n      const createdOption = res.data;\n\n      // add new item to redux store - this will simultaneously update the Selects with the new option\n      if (endpoint === \"liquors\") {\n        this.props.dispatch(didCreateLiquor(createdOption));\n      } else {\n        this.props.dispatch(didCreateIngredient(createdOption));\n      }\n\n      NotificationManager.success(\n        \"Successfully created your ingredient!\",\n        \"Creation Success\",\n        2000\n      );\n\n      return createdOption;\n    } catch (e) {\n      NotificationManager.error(\n        \"There was an error creating your ingredient. Please try again or refresh the page.\",\n        \"Creation Error\",\n        2000\n      );\n    }\n  };\n\n  handleSelectComplexity = (selectedComplexity) => {\n    const isValidStyles = {\n      control: (provided) => ({\n        ...provided,\n        borderWidth: \"1px\",\n        borderColor: \"hsl(0, 0%, 80%)\",\n      }),\n    };\n\n    this.setState({\n      complexity: selectedComplexity.value,\n      complexityClass: isValidStyles,\n    });\n  };\n\n  /**\n   *\n   * @param {integer} itemId\n   * @param {String} property\n   *\n   * @returns undefined\n   *\n   * takes in the publicId of a selectedLiquor or selectedIngredient\n   * and finds the active ingredient\n   * then updates it's unit or amount property to the selected value\n   */\n  updateProperty = (itemId, property) => (event) => {\n    const updatedIngredient = _.find(\n      this.state.selectedIngredients,\n      (ingredient) => {\n        return ingredient.publicId === itemId;\n      }\n    );\n\n    const updatedLiquor = _.find(this.state.selectedLiquors, (liquor) => {\n      return liquor.publicId === itemId;\n    });\n\n    const itemToUpdate = updatedIngredient || updatedLiquor;\n    const key = updatedIngredient ? \"selectedIngredients\" : \"selectedLiquors\";\n\n    // this looks more confusing than it is\n    // iterate through the existing array of selectedIngredients or selectedLiquors\n    // and when you find the item to be updated, update the property (unit or amount)\n    this.setState((prevState) => ({\n      [key]: prevState[key].map((item) => {\n        if (item.publicId === itemToUpdate.publicId) {\n          const updatedItem = {\n            ...itemToUpdate,\n            [property]: event.target.value,\n          };\n          return updatedItem;\n        }\n\n        return item;\n      }),\n    }));\n  };\n\n  toggleIsPrivate = () => {\n    this.setState({ isPrivate: !this.state.isPrivate });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const isValid = true; //this.validateForm();\n\n    if (isValid) {\n      let response;\n      try {\n        response = await axiosInstance.post(\"/cocktails/\", {\n          name: this.state.cocktailName,\n          description: this.state.description,\n          complexity: this.state.complexity,\n          instructions: this.state.instructions,\n          liquors: this.state.selectedLiquors,\n          ingredients: this.state.selectedIngredients,\n          isPrivate: this.state.isPrivate,\n        });\n\n        const imageResponse = this.uploadCocktailImage(response.data);\n\n        NotificationManager.success(\n          'Your cocktail was successfully created! You can now view this in the \"Created Cocktails\" section in your profile.',\n          \"Cocktail Submitted\",\n          2000\n        );\n        setTimeout(() => {\n          this.setState({ submittedForm: true });\n        }, 2000);\n      } catch (error) {\n        NotificationManager.error(\n          \"There was an error creating your cocktail, please try resubmitting or refreshing the page.\",\n          \"Creation Error\",\n          2000\n        );\n        throw error;\n      } finally {\n        return response;\n      }\n    } else {\n      if (!this.state.errorMessageActive) {\n        this.setState({ errorMessageActive: true });\n        NotificationManager.error(\n          \"Please fill out all required inputs in order to create your cocktail\",\n          \"Invalid Input\",\n          2000,\n          () => this.setState({ errorMessageActive: false })\n        );\n\n        setTimeout(() => {\n          this.setState({ errorMessageActive: false });\n        }, 2000);\n      }\n    }\n  };\n\n  complexityOptions = () => {\n    return [...Array(10).keys()].map((val) => {\n      return { value: 1 + val, label: 1 + val };\n    });\n  };\n\n  validateForm = () => {\n    const cocktailNameValid = this.state.cocktailName.trim().length > 0;\n    const selectedIngredientsValid = this.state.selectedIngredients.length > 0;\n    const selectedLiquorsValid = this.state.selectedLiquors.length > 0;\n    const instructionsValid = this.state.instructions.trim().length > 0;\n    const complexityIsValid = this.state.complexity > 0;\n    const formIsValid =\n      cocktailNameValid &&\n      selectedIngredientsValid &&\n      selectedLiquorsValid &&\n      complexityIsValid &&\n      instructionsValid;\n\n    if (!formIsValid) {\n      const complexityStyles = {\n        control: (provided) => ({\n          ...provided,\n          borderWidth: this.state.complexity > 0 ? \"1px\" : \"2px\",\n          borderColor: this.state.complexity > 0 ? \"hsl(0, 0%, 80%)\" : \"red\",\n        }),\n      };\n\n      this.setState({\n        cocktailNameValid,\n        instructionsValid,\n        selectedIngredientsAreValid: this.state.selectedIngredients.length > 0,\n        selectedLiquorsAreValid: this.state.selectedLiquors.length > 0,\n        complexityClass: complexityStyles,\n      });\n    }\n\n    return formIsValid;\n  };\n\n  shouldRedirect = () => {\n    if (this.state.submittedForm) {\n      return <Redirect to={{ pathname: \"/\" }} />;\n    }\n  };\n\n  onUploadImage = (img) => {\n    this.setState({ cocktailImg: img[0] });\n  };\n\n  uploadCocktailImage = async (cocktail) => {\n    const imageData = new FormData();\n    imageData.append(\"image\", this.state.cocktailImg);\n    imageData.append(\"name\", this.state.cocktailImg.name);\n    imageData.append(\"cocktail_id\", cocktail.publicId);\n    axiosInstance.defaults.headers[\"Content-Type\"] = \"multipart/form-data\";\n\n    try {\n      const res = await axiosInstance.post(\"/cocktail_images/\", imageData);\n\n      return res;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      axiosInstance.defaults.headers[\"Content-Type\"] = \"application/json\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"create-cocktail-container\">\n        <form className=\"create-cocktail-form\" onSubmit={this.handleSubmit}>\n          <label className=\"cocktail-name-input\">\n            <div className=\"input-name\">Name*:</div>\n            <input\n              name=\"cocktailName\"\n              className={this.state.cocktailNameValid ? \"\" : \"invalid\"}\n              type=\"text\"\n              value={this.state.cocktailName}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"dropdown-select\">\n            <div className=\"input-name\">Liquors*:</div>\n            <ListDropdown\n              canCreateNewOptions={true}\n              name=\"Liquors\"\n              options={this.props.liquorOptions}\n              optionName=\"selectedLiquors\"\n              error={!this.state.selectedLiquorsAreValid}\n              handleSelect={this.handleSelect}\n            />\n          </label>\n          <div className=\"liquor-amounts\">\n            <AmountsInput\n              items={this.state.selectedLiquors}\n              min={0}\n              max={10}\n              updateProperty={this.updateProperty}\n            />\n          </div>\n          <label className=\"dropdown-select\">\n            <div className=\"input-name\">Ingredients*:</div>\n            <ListDropdown\n              canCreateNewOptions={true}\n              name=\"Ingredients\"\n              options={this.props.ingredientOptions}\n              optionName=\"selectedIngredients\"\n              error={!this.state.selectedIngredientsAreValid}\n              handleSelect={this.handleSelect}\n            />\n          </label>\n          <div className=\"ingredient-amounts\">\n            <AmountsInput\n              items={this.state.selectedIngredients}\n              min={0}\n              max={10}\n              updateProperty={this.updateProperty}\n            />\n          </div>\n          <label className=\"input-text-area\">\n            <div className=\"input-name\">Instructions*:</div>\n            <textarea\n              name=\"instructions\"\n              className={this.state.instructionsValid ? \"\" : \"invalid\"}\n              type=\"textarea\"\n              value={this.state.instructions}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"input-text-area\">\n            <div className=\"input-name\">Description:</div>\n            <textarea\n              name=\"description\"\n              type=\"textarea\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"dropdown-select complexity\">\n            <div className=\"input-name\">Complexity*:</div>\n            <Select\n              styles={this.state.complexityClass}\n              name=\"Complexity\"\n              options={this.complexityOptions()}\n              onChange={this.handleSelectComplexity}\n            />\n            <HelpIcon\n              title=\"A measure of how hard this drink is to make!\"\n              placement=\"top\"\n            />\n          </label>\n          <ImageUploader\n            buttonText=\"Upload Cocktail Image\"\n            onChange={this.onUploadImage}\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n            maxFileSize={9999999}\n            singleImage={true}\n            withIcon={true}\n            withPreview={true}\n          />\n          <div className=\"private-cocktail-checkbox\">\n            <Checkbox\n              checked={this.state.isPrivate}\n              onChange={this.toggleIsPrivate}\n            />\n            <span className=\"checkbox-text\">Make private</span>\n          </div>\n          <input\n            className=\"create-cocktail-submit-button\"\n            type=\"submit\"\n            value=\"Create Cocktail\"\n          />\n        </form>\n\n        {this.shouldRedirect()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { liquors, ingredients } = state;\n  return {\n    liquorOptions: _.sortBy(_.uniqBy(liquors, \"name\"), \"name\"),\n    ingredientOptions: _.sortBy(_.uniqBy(ingredients, \"name\"), \"name\"),\n  };\n};\n\nexport default connect(mapStateToProps)(CreateCocktailForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles.scss\";\nimport CocktailDetail from \"../cocktail-detail\";\n\nconst list = (cocktails) => {\n  return (\n    <div className=\"cocktails-list\">\n      {cocktails.map((cocktail) => {\n        return <CocktailDetail cocktail={cocktail} key={cocktail.publicId} />;\n      })}\n    </div>\n  );\n};\n\nconst CocktailsList = (props) => {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      {list(props.cocktails)}\n    </div>\n  );\n};\n\nexport default React.memo(CocktailsList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport { didGetCocktails } from \"../../features/saved-cocktails/savedCocktailsSlice\";\n\nimport CocktailsList from \"../cocktails-list\";\n\nclass SavedCocktailsDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    const savedCocktails = await axiosInstance.get(\n      \"/cocktails/saved_cocktails\"\n    );\n\n    this.props.dispatch(didGetCocktails(savedCocktails.data));\n  }\n\n  render() {\n    return (\n      <div className=\"saved-cocktail-display\">\n        <CocktailsList\n          title={\"Saved Cocktails\"}\n          cocktails={_.sortBy(this.props.savedCocktails, [\"name\"])}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const savedCocktails = state.savedCocktails;\n  return { savedCocktails: savedCocktails };\n};\n\nexport default connect(mapStateToProps)(SavedCocktailsDisplay);\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { NotificationManager } from \"react-notifications\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\n\nimport CocktailsList from \"../cocktails-list\";\n\nclass CreatedCocktailsDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { createdCocktails: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const createdCocktails = await axiosInstance.get(\n        \"/cocktails/created_cocktails\"\n      );\n\n      this.setState({ createdCocktails: createdCocktails.data });\n    } catch (e) {\n      NotificationManager.error(\n        \"Please try refreshing the page\",\n        \"Error retrieving created cocktails\",\n        5000\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"created-cocktail-display\">\n        <CocktailsList\n          title={\"Created Cocktails\"}\n          cocktails={_.sortBy(this.state.createdCocktails, [\"name\"])}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CreatedCocktailsDisplay;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { didSaveCocktail } from \"../../features/saved-cocktails/savedCocktailsSlice\";\nimport { didUnsaveCocktail } from \"../../features/saved-cocktails/savedCocktailsSlice\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport CocktailDisplay from \"../cocktail-display\";\n\nclass DynamicCocktailDisplayContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      complexity: 0,\n      image: \"\",\n      liquors: [],\n      ingredients: [],\n      createdBy: null,\n      isSaved: false,\n      timesSaved: 0,\n    };\n  }\n\n  async componentDidMount() {\n    const cocktailId = this.props.match.params.id;\n\n    // try to see if cocktail is in redux store before making a network request\n    let displayCocktail = this.props.savedCocktails.find(\n      (cocktail) => cocktail.publicId === cocktailId\n    );\n\n    if (!displayCocktail) {\n      displayCocktail = await axiosInstance.get(`/cocktails/${cocktailId}`);\n      displayCocktail = displayCocktail.data;\n    }\n\n    this.setState({\n      cocktail: displayCocktail,\n      cocktailId: cocktailId,\n      name: displayCocktail.name,\n      description: displayCocktail.description,\n      complexity: displayCocktail.complexity,\n      image: displayCocktail.image,\n      createdBy: displayCocktail.createdBy,\n      instructions: displayCocktail.instructions,\n      liquors: displayCocktail.liquors,\n      ingredients: displayCocktail.ingredients,\n      isSaved: displayCocktail.isSaved,\n      timesSaved: displayCocktail.timesSaved,\n    });\n  }\n\n  toggleSaveCocktail = async () => {\n    try {\n      if (!this.state.isSaved) {\n        await axiosInstance.post(\"/cocktails/save_cocktail/\", {\n          public_id: this.state.cocktailId,\n        });\n\n        this.setState({ isSaved: true, timesSaved: this.state.timesSaved + 1 });\n\n        this.props.dispatch(didSaveCocktail(this.state.cocktail));\n      } else {\n        await axiosInstance.post(\"/cocktails/unsave_cocktail/\", {\n          public_id: this.state.cocktailId,\n        });\n\n        this.setState({\n          isSaved: false,\n          timesSaved: this.state.timesSaved - 1,\n        });\n\n        this.props.dispatch(didUnsaveCocktail(this.state.cocktailId));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"dynamic-cocktail-container\">\n        <CocktailDisplay\n          name={this.state.name}\n          description={this.state.description}\n          complexity={this.state.complexity}\n          image={this.state.image}\n          ingredients={this.state.ingredients}\n          liquors={this.state.liquors}\n          instructions={this.state.instructions}\n          createdBy={this.state.createdBy}\n          isSaved={this.state.isSaved}\n          timesSaved={this.state.timesSaved}\n          toggleSaveCocktail={this.toggleSaveCocktail}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const savedCocktails = state.savedCocktails;\n  return { savedCocktails: savedCocktails };\n};\n\nexport default connect(mapStateToProps)(DynamicCocktailDisplayContainer);\n","import React from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NotificationContainer } from \"react-notifications\";\n\nimport \"./App.scss\";\nimport history from \"../../history\";\n\nimport Homepage from \"../homepage\";\nimport Login from \"../login\";\nimport Signup from \"../signup\";\nimport PrimaryNavigationBar from \"../primary-navigation-bar\";\nimport CreateCocktailForm from \"../create-cocktail-form\";\nimport SavedCocktailsDisplay from \"../saved-cocktails-display\";\nimport CreatedCocktailsDisplay from \"../created-cocktails-display\";\nimport DynamicCocktailDisplayContainer from \"../dynamic-cocktail-display-container\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Router history={history}>\n          <PrimaryNavigationBar user={this.props.user} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <Homepage isSignedIn={this.props.user ? true : false} />\n              )}\n            />\n            <Route exact path=\"/login/\">\n              {this.props.user ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            <Route exact path=\"/signup/\">\n              {this.props.user ? <Redirect to=\"/\" /> : <Signup />}\n            </Route>\n            <Route\n              exact\n              path=\"/create-cocktail/\"\n              component={CreateCocktailForm}\n            />\n            <Route\n              exact\n              path=\"/saved-cocktails/\"\n              component={SavedCocktailsDisplay}\n            />\n            <Route\n              exact\n              path=\"/created-cocktails/\"\n              component={CreatedCocktailsDisplay}\n            />\n            <Route\n              exact\n              path=\"/cocktail/:id\"\n              component={DynamicCocktailDisplayContainer}\n            />\n          </Switch>\n        </Router>\n\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { user } = state.users;\n  return { user: user };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\n\nimport usersReducer from \"../features/users/usersSlice\";\nimport liquorsReducer from \"../features/liquors/liquorsSlice\";\nimport ingredientsReducer from \"../features/ingredients/ingredientsSlice\";\nimport savedCocktailsReducer from \"../features/saved-cocktails/savedCocktailsSlice\";\n\nexport default combineReducers({\n  users: usersReducer,\n  liquors: liquorsReducer,\n  ingredients: ingredientsReducer,\n  savedCocktails: savedCocktailsReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport reducer from \"../reducers\";\n\nconst store = configureStore({\n  reducer: reducer,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\nimport App from \"./components/app/App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}