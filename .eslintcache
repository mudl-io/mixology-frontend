[{"/mnt/c/Users/Owen/dev/mixology/frontend/src/index.js":"1","/mnt/c/Users/Owen/dev/mixology/frontend/src/reportWebVitals.js":"2","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/app/App.js":"3","/mnt/c/Users/Owen/dev/mixology/frontend/src/history.js":"4","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/homepage/index.js":"5","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/cocktail-display/index.js":"6","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/login/index.js":"7","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/signup/index.js":"8","/home/owen/dev/mixology/frontend/src/index.js":"9","/home/owen/dev/mixology/frontend/src/reportWebVitals.js":"10","/home/owen/dev/mixology/frontend/src/components/app/App.js":"11","/home/owen/dev/mixology/frontend/src/history.js":"12","/home/owen/dev/mixology/frontend/src/components/homepage/index.js":"13","/home/owen/dev/mixology/frontend/src/components/cocktail-display/index.js":"14","/home/owen/dev/mixology/frontend/src/components/login/index.js":"15","/home/owen/dev/mixology/frontend/src/components/signup/index.js":"16","/home/owen/dev/mixology/frontend/src/components/primary-navigation-bar/index.js":"17","/home/owen/dev/mixology/frontend/src/axiosApi.js":"18","/home/owen/dev/mixology/frontend/src/store/index.js":"19","/home/owen/dev/mixology/frontend/src/reducers/index.js":"20","/home/owen/dev/mixology/frontend/src/features/users/usersSlice.js":"21","/home/owen/dev/mixology/frontend/src/components/create-cocktail-form/index.js":"22","/home/owen/dev/mixology/frontend/src/components/saved-cocktails-display/index.js":"23","/home/owen/dev/mixology/frontend/src/components/dynamic-cocktail-display-container/index.js":"24","/home/owen/dev/mixology/frontend/src/components/created-cocktails-display/index.js":"25","/home/owen/dev/mixology/frontend/src/features/ingredients/ingredientsSlice.js":"26","/home/owen/dev/mixology/frontend/src/features/liquors/liquorsSlice.js":"27","/home/owen/dev/mixology/frontend/src/features/saved-cocktails/savedCocktailsSlice.js":"28","/home/owen/dev/mixology/frontend/src/components/list-dropdown/index.js":"29","/home/owen/dev/mixology/frontend/src/components/right-cocktail-sidenav/index.js":"30","/home/owen/dev/mixology/frontend/src/components/cocktails-list/index.js":"31","/home/owen/dev/mixology/frontend/src/components/help-icon/index.js":"32","/home/owen/dev/mixology/frontend/src/components/heart-checkbox/index.js":"33","/home/owen/dev/mixology/frontend/src/components/cocktail-detail/index.js":"34","/home/owen/dev/mixology/frontend/src/components/amounts-input/index.js":"35"},{"size":516,"mtime":1611007416341,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":604,"mtime":1613325561500,"results":"39","hashOfConfig":"37"},{"size":91,"mtime":1611009049331,"results":"40","hashOfConfig":"37"},{"size":1589,"mtime":1613001595046,"results":"41","hashOfConfig":"37"},{"size":1490,"mtime":1611629749981,"results":"42","hashOfConfig":"37"},{"size":187,"mtime":1613325715632,"results":"43","hashOfConfig":"37"},{"size":190,"mtime":1613325597485,"results":"44","hashOfConfig":"37"},{"size":584,"mtime":1617483895420,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1617483895420,"results":"47","hashOfConfig":"46"},{"size":2222,"mtime":1617667650740,"results":"48","hashOfConfig":"46"},{"size":88,"mtime":1617483895420,"results":"49","hashOfConfig":"46"},{"size":9368,"mtime":1617483895420,"results":"50","hashOfConfig":"46"},{"size":2535,"mtime":1617667140250,"results":"51","hashOfConfig":"46"},{"size":2375,"mtime":1617483895420,"results":"52","hashOfConfig":"46"},{"size":3490,"mtime":1617483895420,"results":"53","hashOfConfig":"46"},{"size":2644,"mtime":1617667121670,"results":"54","hashOfConfig":"46"},{"size":1729,"mtime":1617667774150,"results":"55","hashOfConfig":"46"},{"size":166,"mtime":1617483895420,"results":"56","hashOfConfig":"46"},{"size":486,"mtime":1617483895420,"results":"57","hashOfConfig":"46"},{"size":617,"mtime":1617483895420,"results":"58","hashOfConfig":"46"},{"size":14272,"mtime":1617666980900,"results":"59","hashOfConfig":"46"},{"size":1022,"mtime":1617483895420,"results":"60","hashOfConfig":"46"},{"size":3206,"mtime":1617666980910,"results":"61","hashOfConfig":"46"},{"size":1041,"mtime":1617483895420,"results":"62","hashOfConfig":"46"},{"size":564,"mtime":1617483895420,"results":"63","hashOfConfig":"46"},{"size":527,"mtime":1617483895420,"results":"64","hashOfConfig":"46"},{"size":601,"mtime":1617483895420,"results":"65","hashOfConfig":"46"},{"size":1584,"mtime":1617483895420,"results":"66","hashOfConfig":"46"},{"size":1707,"mtime":1617668049980,"results":"67","hashOfConfig":"46"},{"size":503,"mtime":1617668027960,"results":"68","hashOfConfig":"46"},{"size":323,"mtime":1617483895420,"results":"69","hashOfConfig":"46"},{"size":507,"mtime":1617483895420,"results":"70","hashOfConfig":"46"},{"size":1148,"mtime":1617668393650,"results":"71","hashOfConfig":"46"},{"size":1725,"mtime":1617483895420,"results":"72","hashOfConfig":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"b5c0b9",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"t1qlw",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/mnt/c/Users/Owen/dev/mixology/frontend/src/index.js",[],["152","153"],"/mnt/c/Users/Owen/dev/mixology/frontend/src/reportWebVitals.js",[],"/mnt/c/Users/Owen/dev/mixology/frontend/src/components/app/App.js",[],"/mnt/c/Users/Owen/dev/mixology/frontend/src/history.js",[],"/mnt/c/Users/Owen/dev/mixology/frontend/src/components/homepage/index.js",[],"/mnt/c/Users/Owen/dev/mixology/frontend/src/components/cocktail-display/index.js",["154"],"import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nclass CocktailDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n  showCocktailDetails = () => {\r\n    if (this.props.name) {\r\n      return this.cocktailDetails(this.props.cocktail);\r\n    }\r\n  };\r\n\r\n  listIngredients = () => {\r\n    if (this.props.ingredients && this.props.liquors) {\r\n      const ingredients = [...this.props.ingredients, ...this.props.liquors];\r\n      return (\r\n        <ul className=\"ingredients-list\">\r\n          {ingredients.map((ingredient) => (\r\n            <li>{ingredient.name}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n\r\n  cocktailDetails = () => {\r\n    return (\r\n      <div className=\"cocktail-details\">\r\n        <img src=\"http://localhost:8000/static/defaultimg.png\" />\r\n        <h2>{this.props.name}</h2>\r\n        <h3 className=\"cocktail-description\">{this.props.description}</h3>\r\n        <div>\r\n          <h3>Instructions:</h3>\r\n          <p>{this.props.instructions}</p>\r\n        </div>\r\n        <div className=\"ingredients-container\">\r\n          <h3 className=\"ingredients-header\">Ingredients:</h3>\r\n          {this.listIngredients()}\r\n        </div>\r\n        <div>Times Saved: {this.props.amtSaved}</div>\r\n        <div>Complexity: {this.props.complexity}/10</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.showCocktailDetails()}</div>;\r\n  }\r\n}\r\n\r\nexport default CocktailDisplay;\r\n","/mnt/c/Users/Owen/dev/mixology/frontend/src/components/login/index.js",["155"],"/mnt/c/Users/Owen/dev/mixology/frontend/src/components/signup/index.js",["156"],"import React from \"react\";\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <div>Signup page</div>;\n  }\n}\nexport default Signup;\n","/home/owen/dev/mixology/frontend/src/index.js",[],["157","158"],"/home/owen/dev/mixology/frontend/src/reportWebVitals.js",[],"/home/owen/dev/mixology/frontend/src/components/app/App.js",["159"],"import React from \"react\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NotificationContainer } from \"react-notifications\";\n\nimport \"./App.scss\";\nimport history from \"../../history\";\n\nimport Homepage from \"../homepage\";\nimport Login from \"../login\";\nimport Signup from \"../signup\";\nimport PrimaryNavigationBar from \"../primary-navigation-bar\";\nimport CreateCocktailForm from \"../create-cocktail-form\";\nimport SavedCocktailsDisplay from \"../saved-cocktails-display\";\nimport CreatedCocktailsDisplay from \"../created-cocktails-display\";\nimport DynamicCocktailDisplayContainer from \"../dynamic-cocktail-display-container\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Router history={history}>\n          <PrimaryNavigationBar user={this.props.user} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <Homepage isSignedIn={this.props.user ? true : false} />\n              )}\n            />\n            <Route exact path=\"/login/\">\n              {this.props.user ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            <Route exact path=\"/signup/\">\n              {this.props.user ? <Redirect to=\"/\" /> : <Signup />}\n            </Route>\n            <Route\n              exact\n              path=\"/create-cocktail/\"\n              component={CreateCocktailForm}\n            />\n            <Route\n              exact\n              path=\"/saved-cocktails/\"\n              component={SavedCocktailsDisplay}\n            />\n            <Route\n              exact\n              path=\"/created-cocktails/\"\n              component={CreatedCocktailsDisplay}\n            />\n            <Route\n              exact\n              path=\"/cocktail/:id\"\n              component={DynamicCocktailDisplayContainer}\n            />\n          </Switch>\n        </Router>\n\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { user } = state.users;\n  return { user: user };\n};\n\nexport default connect(mapStateToProps)(App);\n","/home/owen/dev/mixology/frontend/src/history.js",[],"/home/owen/dev/mixology/frontend/src/components/homepage/index.js",[],"/home/owen/dev/mixology/frontend/src/components/cocktail-display/index.js",["160"],"import React from \"react\";\n\nimport \"./styles.scss\";\nimport defaultImg from \"../../assets/defaultimg.png\";\nimport HeartCheckbox from \"../heart-checkbox\";\n\nclass CocktailDisplay extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: \"\",\n    };\n  }\n\n  showCocktailDetails = () => {\n    if (this.props.name) {\n      return this.cocktailDetails(this.props.cocktail);\n    }\n  };\n\n  listIngredients = () => {\n    if (this.props.ingredients && this.props.liquors) {\n      const ingredients = [...this.props.liquors, ...this.props.ingredients];\n      return (\n        <ul className=\"ingredients-list\">\n          {ingredients.map((ingredient) => (\n            <li key={`${ingredient.public_id}-${ingredient.name}`}>\n              <span>\n                {ingredient.name} - {ingredient.amount} {ingredient.unit}\n              </span>\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  };\n\n  createdBy = () => {\n    if (this.props.createdBy) {\n      return (\n        <span className=\"complexity stat\">\n          Created By: {this.props.createdBy.username}\n        </span>\n      );\n    }\n  };\n\n  getImage = () => {\n    if (this.props.image) {\n      return this.props.image.image;\n    }\n\n    return defaultImg;\n  };\n\n  cocktailDetails = () => {\n    return (\n      <div className=\"cocktail-details\">\n        <div className=\"img-and-stats\">\n          <img src={this.getImage()} />\n          <h2>{this.props.name}</h2>\n          <span className=\"heart-checkbox\">\n            <HeartCheckbox\n              isChecked={this.props.isSaved}\n              handleClick={this.props.toggleSaveCocktail}\n              tabIndex=\"0\"\n            />\n          </span>\n          <span className=\"saved stat\">\n            Times Saved: {this.props.timesSaved}\n          </span>\n          <span className=\"complexity stat\">\n            Complexity: {this.props.complexity}/10\n          </span>\n          {this.createdBy()}\n        </div>\n        <div>\n          <h3 className=\"header\">Description</h3>\n          <p className=\"content\">{this.props.description}</p>\n        </div>\n        <div className=\"ingredients-container\">\n          <h3 className=\"ingredients header\">Ingredients</h3>\n          {this.listIngredients()}\n        </div>\n        <div>\n          <h3 className=\"header\">Instructions</h3>\n          <p className=\"content\">{this.props.instructions}</p>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return <div>{this.showCocktailDetails()}</div>;\n  }\n}\n\nexport default CocktailDisplay;\n","/home/owen/dev/mixology/frontend/src/components/login/index.js",[],"/home/owen/dev/mixology/frontend/src/components/signup/index.js",[],"/home/owen/dev/mixology/frontend/src/components/primary-navigation-bar/index.js",["161","162"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nimport \"./styles.scss\";\nimport defaultImg from \"../../assets/defaultimg.png\";\nimport axiosInstance from \"../../axiosApi\";\n\n// redux actions\nimport { logoutUser } from \"../../features/users/usersSlice\";\n\nclass PrimaryNavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logout = async () => {\n    let response;\n    try {\n      response = await axiosInstance.post(\"/blacklist/\", {\n        refresh_token: localStorage.getItem(\"refresh_token\"),\n      });\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      axiosInstance.defaults.headers[\"Authorization\"] = null;\n\n      this.props.dispatch(logoutUser());\n    } catch (e) {\n      console.log(e);\n    } finally {\n      return response;\n    }\n  };\n\n  leftNavContent = () => {\n    let content;\n\n    if (this.props.user) {\n      content = (\n        <span className=\"cocktail-options-buttons\">\n          <Link className=\"nav-link\" to=\"/create-cocktail/\">\n            Create a Cocktail\n          </Link>\n        </span>\n      );\n    }\n\n    return content;\n  };\n\n  rightNavContent = () => {\n    let content;\n\n    if (this.props.user) {\n      content = (\n        <DropdownButton\n          className=\"user-options-dropdown\"\n          variant=\"Secondary\"\n          title={this.props.user.username}\n        >\n          <Dropdown.Item>Profile</Dropdown.Item>\n          <Dropdown.Item as={Link} to={\"/saved-cocktails/\"}>\n            Saved Cocktails\n          </Dropdown.Item>\n          <Dropdown.Item as={Link} to={\"/created-cocktails/\"}>\n            Created Cocktails\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item onClick={this.logout}>Logout</Dropdown.Item>\n        </DropdownButton>\n      );\n    } else {\n      content = (\n        <span className=\"login-signup-buttons\">\n          <Link className=\"nav-link\" to=\"/login/\">\n            Login\n          </Link>\n          <Link className=\"nav-link\" to=\"/signup/\">\n            Sign Up\n          </Link>\n        </span>\n      );\n    }\n\n    return content;\n  };\n\n  render() {\n    return (\n      <div className=\"primary-navigation-bar\">\n        <nav>\n          <Link className=\"nav-link homepage\" to=\"/\">\n            <img className=\"site-logo-nav\" src={defaultImg} />\n            <span>Mixed In</span>\n          </Link>\n          {this.leftNavContent()}\n          {this.rightNavContent()}\n        </nav>\n      </div>\n    );\n  }\n}\nexport default connect()(PrimaryNavigationBar);\n","/home/owen/dev/mixology/frontend/src/axiosApi.js",[],"/home/owen/dev/mixology/frontend/src/store/index.js",[],"/home/owen/dev/mixology/frontend/src/reducers/index.js",[],"/home/owen/dev/mixology/frontend/src/features/users/usersSlice.js",[],"/home/owen/dev/mixology/frontend/src/components/create-cocktail-form/index.js",["163","164"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { NotificationManager } from \"react-notifications\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ImageUploader from \"react-images-upload\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\n// redux actions\nimport {\n  didGetIngredients,\n  didCreateIngredient,\n} from \"../../features/ingredients/ingredientsSlice\";\nimport {\n  didGetLiquors,\n  didCreateLiquor,\n} from \"../../features/liquors/liquorsSlice\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport HelpIcon from \"../help-icon\";\nimport ListDropdown from \"../list-dropdown\";\nimport AmountsInput from \"../amounts-input\";\n\nclass CreateCocktailForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cocktailName: \"\",\n      cocktailImg: null,\n      description: \"\",\n      complexity: 0,\n      instructions: \"\",\n      selectedIngredients: [],\n      selectedLiquors: [],\n      isPrivate: false,\n      cocktailNameValid: true,\n      selectedLiquorsAreValid: true,\n      selectedIngredientsAreValid: true,\n      complexityClass: {},\n      instructionsValid: true,\n      submittedForm: false,\n      errorMessageActive: false,\n    };\n  }\n\n  async componentDidMount() {\n    // only make network request to get liquors and ingredients if the store is not already filled\n    try {\n      if (\n        this.props.ingredientOptions.length === 0 &&\n        this.props.liquorOptions.length === 0\n      ) {\n        const [ingredients, liquors] = await Promise.all([\n          axiosInstance.get(\"/ingredients/\"),\n          axiosInstance.get(\"/liquors/\"),\n        ]);\n\n        this.props.dispatch(didGetIngredients(ingredients.data));\n        this.props.dispatch(didGetLiquors(liquors.data));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  handleChange = (event) => {\n    const isEmpty = event.target.value.trim().length === 0;\n    const key = event.target.name + \"Valid\";\n    this.setState({ [event.target.name]: event.target.value, [key]: !isEmpty });\n  };\n\n  handleSelect = (name) => async (selectedOptions, selectType) => {\n    if (selectType.action === \"create-option\") {\n      const optionToCreate = _.find(selectedOptions, { __isNew__: true });\n\n      const newOption = await this.createNewOption(name, optionToCreate.label);\n      const index = selectedOptions.findIndex(\n        (option) => option.__isNew__ == true\n      );\n      selectedOptions[index].value = newOption;\n      selectedOptions[index].__isNew__ = false;\n    }\n\n    const values = selectedOptions.map((option) => {\n      let value = option.value;\n\n      const existingValue = _.find(this.state[name], (item) => {\n        return item.publicId === value.publicId;\n      });\n\n      if (existingValue) {\n        value = { ...existingValue };\n      } else {\n        value = { ...value, amount: 0, unit: \"oz\" };\n      }\n\n      return value;\n    });\n    const selectClassName = name + \"AreValid\";\n    const isValid = values.length > 0;\n\n    this.setState({ [name]: values, [selectClassName]: isValid });\n  };\n\n  /**\n   *\n   * @param {String} optionType\n   * @param {Object} newOption\n   *\n   * takes in an optionType (selectedIngredient or selectedLiquor) and handles creating a previously\n   * non-existent liquor or ingredient\n   *\n   * this will persist this record and associate it with the currently logged in user.\n   *\n   * only the creator of the custom liquor or ingredient will be able to see or use it while\n   * creating new cocktails.\n   *\n   * @returns undefined\n   */\n  createNewOption = async (optionType, newOption) => {\n    const endpoint =\n      optionType === \"selectedLiquors\" ? \"liquors\" : \"ingredients\";\n\n    try {\n      const res = await axiosInstance.post(`/${endpoint}/`, {\n        name: newOption,\n      });\n\n      const createdOption = res.data;\n\n      // add new item to redux store - this will simultaneously update the Selects with the new option\n      if (endpoint === \"liquors\") {\n        this.props.dispatch(didCreateLiquor(createdOption));\n      } else {\n        this.props.dispatch(didCreateIngredient(createdOption));\n      }\n\n      NotificationManager.success(\n        \"Successfully created your ingredient!\",\n        \"Creation Success\",\n        2000\n      );\n\n      return createdOption;\n    } catch (e) {\n      NotificationManager.error(\n        \"There was an error creating your ingredient. Please try again or refresh the page.\",\n        \"Creation Error\",\n        2000\n      );\n    }\n  };\n\n  handleSelectComplexity = (selectedComplexity) => {\n    const isValidStyles = {\n      control: (provided) => ({\n        ...provided,\n        borderWidth: \"1px\",\n        borderColor: \"hsl(0, 0%, 80%)\",\n      }),\n    };\n\n    this.setState({\n      complexity: selectedComplexity.value,\n      complexityClass: isValidStyles,\n    });\n  };\n\n  /**\n   *\n   * @param {integer} itemId\n   * @param {String} property\n   *\n   * @returns undefined\n   *\n   * takes in the publicId of a selectedLiquor or selectedIngredient\n   * and finds the active ingredient\n   * then updates it's unit or amount property to the selected value\n   */\n  updateProperty = (itemId, property) => (event) => {\n    const updatedIngredient = _.find(\n      this.state.selectedIngredients,\n      (ingredient) => {\n        return ingredient.publicId === itemId;\n      }\n    );\n\n    const updatedLiquor = _.find(this.state.selectedLiquors, (liquor) => {\n      return liquor.publicId === itemId;\n    });\n\n    const itemToUpdate = updatedIngredient || updatedLiquor;\n    const key = updatedIngredient ? \"selectedIngredients\" : \"selectedLiquors\";\n\n    // this looks more confusing than it is\n    // iterate through the existing array of selectedIngredients or selectedLiquors\n    // and when you find the item to be updated, update the property (unit or amount)\n    this.setState((prevState) => ({\n      [key]: prevState[key].map((item) => {\n        if (item.publicId === itemToUpdate.publicId) {\n          const updatedItem = {\n            ...itemToUpdate,\n            [property]: event.target.value,\n          };\n          return updatedItem;\n        }\n\n        return item;\n      }),\n    }));\n  };\n\n  toggleIsPrivate = () => {\n    this.setState({ isPrivate: !this.state.isPrivate });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const isValid = true; //this.validateForm();\n\n    if (isValid) {\n      let response;\n      try {\n        response = await axiosInstance.post(\"/cocktails/\", {\n          name: this.state.cocktailName,\n          description: this.state.description,\n          complexity: this.state.complexity,\n          instructions: this.state.instructions,\n          liquors: this.state.selectedLiquors,\n          ingredients: this.state.selectedIngredients,\n          isPrivate: this.state.isPrivate,\n        });\n\n        const imageResponse = this.uploadCocktailImage(response.data);\n\n        NotificationManager.success(\n          'Your cocktail was successfully created! You can now view this in the \"Created Cocktails\" section in your profile.',\n          \"Cocktail Submitted\",\n          2000\n        );\n        setTimeout(() => {\n          this.setState({ submittedForm: true });\n        }, 2000);\n      } catch (error) {\n        NotificationManager.error(\n          \"There was an error creating your cocktail, please try resubmitting or refreshing the page.\",\n          \"Creation Error\",\n          2000\n        );\n        throw error;\n      } finally {\n        return response;\n      }\n    } else {\n      if (!this.state.errorMessageActive) {\n        this.setState({ errorMessageActive: true });\n        NotificationManager.error(\n          \"Please fill out all required inputs in order to create your cocktail\",\n          \"Invalid Input\",\n          2000,\n          () => this.setState({ errorMessageActive: false })\n        );\n\n        setTimeout(() => {\n          this.setState({ errorMessageActive: false });\n        }, 2000);\n      }\n    }\n  };\n\n  complexityOptions = () => {\n    return [...Array(10).keys()].map((val) => {\n      return { value: 1 + val, label: 1 + val };\n    });\n  };\n\n  validateForm = () => {\n    const cocktailNameValid = this.state.cocktailName.trim().length > 0;\n    const selectedIngredientsValid = this.state.selectedIngredients.length > 0;\n    const selectedLiquorsValid = this.state.selectedLiquors.length > 0;\n    const instructionsValid = this.state.instructions.trim().length > 0;\n    const complexityIsValid = this.state.complexity > 0;\n    const formIsValid =\n      cocktailNameValid &&\n      selectedIngredientsValid &&\n      selectedLiquorsValid &&\n      complexityIsValid &&\n      instructionsValid;\n\n    if (!formIsValid) {\n      const complexityStyles = {\n        control: (provided) => ({\n          ...provided,\n          borderWidth: this.state.complexity > 0 ? \"1px\" : \"2px\",\n          borderColor: this.state.complexity > 0 ? \"hsl(0, 0%, 80%)\" : \"red\",\n        }),\n      };\n\n      this.setState({\n        cocktailNameValid,\n        instructionsValid,\n        selectedIngredientsAreValid: this.state.selectedIngredients.length > 0,\n        selectedLiquorsAreValid: this.state.selectedLiquors.length > 0,\n        complexityClass: complexityStyles,\n      });\n    }\n\n    return formIsValid;\n  };\n\n  shouldRedirect = () => {\n    if (this.state.submittedForm) {\n      return <Redirect to={{ pathname: \"/\" }} />;\n    }\n  };\n\n  onUploadImage = (img) => {\n    this.setState({ cocktailImg: img[0] });\n  };\n\n  uploadCocktailImage = async (cocktail) => {\n    const imageData = new FormData();\n    imageData.append(\"image\", this.state.cocktailImg);\n    imageData.append(\"name\", this.state.cocktailImg.name);\n    imageData.append(\"cocktail_id\", cocktail.publicId);\n    axiosInstance.defaults.headers[\"Content-Type\"] = \"multipart/form-data\";\n\n    try {\n      const res = await axiosInstance.post(\"/cocktail_images/\", imageData);\n\n      return res;\n    } catch (e) {\n      console.log(e);\n    } finally {\n      axiosInstance.defaults.headers[\"Content-Type\"] = \"application/json\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"create-cocktail-container\">\n        <form className=\"create-cocktail-form\" onSubmit={this.handleSubmit}>\n          <label className=\"cocktail-name-input\">\n            <div className=\"input-name\">Name*:</div>\n            <input\n              name=\"cocktailName\"\n              className={this.state.cocktailNameValid ? \"\" : \"invalid\"}\n              type=\"text\"\n              value={this.state.cocktailName}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"dropdown-select\">\n            <div className=\"input-name\">Liquors*:</div>\n            <ListDropdown\n              canCreateNewOptions={true}\n              name=\"Liquors\"\n              options={this.props.liquorOptions}\n              optionName=\"selectedLiquors\"\n              error={!this.state.selectedLiquorsAreValid}\n              handleSelect={this.handleSelect}\n            />\n          </label>\n          <div className=\"liquor-amounts\">\n            <AmountsInput\n              items={this.state.selectedLiquors}\n              min={0}\n              max={10}\n              updateProperty={this.updateProperty}\n            />\n          </div>\n          <label className=\"dropdown-select\">\n            <div className=\"input-name\">Ingredients*:</div>\n            <ListDropdown\n              canCreateNewOptions={true}\n              name=\"Ingredients\"\n              options={this.props.ingredientOptions}\n              optionName=\"selectedIngredients\"\n              error={!this.state.selectedIngredientsAreValid}\n              handleSelect={this.handleSelect}\n            />\n          </label>\n          <div className=\"ingredient-amounts\">\n            <AmountsInput\n              items={this.state.selectedIngredients}\n              min={0}\n              max={10}\n              updateProperty={this.updateProperty}\n            />\n          </div>\n          <label className=\"input-text-area\">\n            <div className=\"input-name\">Instructions*:</div>\n            <textarea\n              name=\"instructions\"\n              className={this.state.instructionsValid ? \"\" : \"invalid\"}\n              type=\"textarea\"\n              value={this.state.instructions}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"input-text-area\">\n            <div className=\"input-name\">Description:</div>\n            <textarea\n              name=\"description\"\n              type=\"textarea\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className=\"dropdown-select complexity\">\n            <div className=\"input-name\">Complexity*:</div>\n            <Select\n              styles={this.state.complexityClass}\n              name=\"Complexity\"\n              options={this.complexityOptions()}\n              onChange={this.handleSelectComplexity}\n            />\n            <HelpIcon\n              title=\"A measure of how hard this drink is to make!\"\n              placement=\"top\"\n            />\n          </label>\n          <ImageUploader\n            buttonText=\"Upload Cocktail Image\"\n            onChange={this.onUploadImage}\n            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n            maxFileSize={9999999}\n            singleImage={true}\n            withIcon={true}\n            withPreview={true}\n          />\n          <div className=\"private-cocktail-checkbox\">\n            <Checkbox\n              checked={this.state.isPrivate}\n              onChange={this.toggleIsPrivate}\n            />\n            <span className=\"checkbox-text\">Make private</span>\n          </div>\n          <input\n            className=\"create-cocktail-submit-button\"\n            type=\"submit\"\n            value=\"Create Cocktail\"\n          />\n        </form>\n\n        {this.shouldRedirect()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { liquors, ingredients } = state;\n  return {\n    liquorOptions: _.sortBy(_.uniqBy(liquors, \"name\"), \"name\"),\n    ingredientOptions: _.sortBy(_.uniqBy(ingredients, \"name\"), \"name\"),\n  };\n};\n\nexport default connect(mapStateToProps)(CreateCocktailForm);\n","/home/owen/dev/mixology/frontend/src/components/saved-cocktails-display/index.js",["165"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport \"./styles.scss\";\nimport axiosInstance from \"../../axiosApi\";\nimport { didGetCocktails } from \"../../features/saved-cocktails/savedCocktailsSlice\";\n\nimport CocktailsList from \"../cocktails-list\";\n\nclass SavedCocktailsDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    const savedCocktails = await axiosInstance.get(\n      \"/cocktails/saved_cocktails\"\n    );\n\n    this.props.dispatch(didGetCocktails(savedCocktails.data));\n  }\n\n  render() {\n    return (\n      <div className=\"saved-cocktail-display\">\n        <CocktailsList\n          title={\"Saved Cocktails\"}\n          cocktails={_.sortBy(this.props.savedCocktails, [\"name\"])}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const savedCocktails = state.savedCocktails;\n  return { savedCocktails: savedCocktails };\n};\n\nexport default connect(mapStateToProps)(SavedCocktailsDisplay);\n","/home/owen/dev/mixology/frontend/src/components/dynamic-cocktail-display-container/index.js",[],"/home/owen/dev/mixology/frontend/src/components/created-cocktails-display/index.js",[],"/home/owen/dev/mixology/frontend/src/features/ingredients/ingredientsSlice.js",[],"/home/owen/dev/mixology/frontend/src/features/liquors/liquorsSlice.js",[],"/home/owen/dev/mixology/frontend/src/features/saved-cocktails/savedCocktailsSlice.js",[],"/home/owen/dev/mixology/frontend/src/components/list-dropdown/index.js",[],"/home/owen/dev/mixology/frontend/src/components/right-cocktail-sidenav/index.js",[],"/home/owen/dev/mixology/frontend/src/components/cocktails-list/index.js",[],"/home/owen/dev/mixology/frontend/src/components/help-icon/index.js",[],"/home/owen/dev/mixology/frontend/src/components/heart-checkbox/index.js",[],"/home/owen/dev/mixology/frontend/src/components/cocktail-detail/index.js",["166"],"/home/owen/dev/mixology/frontend/src/components/amounts-input/index.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":34,"column":9,"nodeType":"173","endLine":34,"endColumn":66},{"ruleId":"174","severity":1,"message":"175","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":6,"endColumn":4},{"ruleId":"167","replacedBy":"178"},{"ruleId":"169","replacedBy":"179"},{"ruleId":"174","severity":1,"message":"175","line":19,"column":3,"nodeType":"176","messageId":"177","endLine":21,"endColumn":4},{"ruleId":"171","severity":1,"message":"172","line":60,"column":11,"nodeType":"173","endLine":60,"endColumn":40},{"ruleId":"174","severity":1,"message":"175","line":14,"column":3,"nodeType":"176","messageId":"177","endLine":16,"endColumn":4},{"ruleId":"171","severity":1,"message":"172","line":94,"column":13,"nodeType":"173","endLine":94,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":80,"column":38,"nodeType":"182","messageId":"183","endLine":80,"endColumn":40},{"ruleId":"184","severity":1,"message":"185","line":237,"column":15,"nodeType":"186","messageId":"187","endLine":237,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":12,"column":3,"nodeType":"176","messageId":"177","endLine":14,"endColumn":4},{"ruleId":"171","severity":1,"message":"172","line":34,"column":7,"nodeType":"173","endLine":34,"endColumn":36},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["188"],["189"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'imageResponse' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]